generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TransitCategory {
  id              Int              @id @default(autoincrement())
  name            String           @unique
  displayNameTh   String?          @map("display_name_th")
  displayNameEn   String?          @map("display_name_en")
  createdAt       DateTime         @default(now()) @map("created_at")
  updatedAt       DateTime         @updatedAt @map("updated_at")
  createBy        String           @map("create_by")
  editBy          String?          @map("edit_by")
  transitServices TransitService[]

  @@map("transit_category")
}

model TransitService {
  id         Int             @id @default(autoincrement())
  categoryId Int             @map("category_id")
  imageUrl   String          @map("image_url")
  title      String?
  uploadAt   DateTime        @default(now()) @map("upload_at")
  isActive   Boolean         @default(true) @map("is_active")
  category   TransitCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  createBy   String?         @map("create_by")
  editBy     String?         @map("edit_by")

  @@index([isActive], map: "idx_transit_service_active")
  @@map("transit_service")
}

model DataCategory {
  id            Int         @id @default(autoincrement())
  name          String      @unique
  description   String?
  createdAt     DateTime    @default(now()) @map("created_at")
  displayNameEn String?     @map("display_name_en")
  displayNameTh String?     @map("display_name_th")
  createBy      String      @map("create_by")
  editBy        String?     @map("edit_by")
  embeds        DataEmbed[]

  @@map("data_category")
}

model DataEmbed {
  id         Int          @id @default(autoincrement())
  categoryId Int          @map("category_id")
  title      String
  embedCode  String       @map("embed_code")
  createdAt  DateTime     @default(now()) @map("created_at")
  isActive   Boolean      @default(true) @map("is_active")
  createBy   String       @map("create_by")
  editBy     String?      @map("edit_by")
  category   DataCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@index([isActive], map: "idx_data_embed_active")
  @@map("data_embed")
}

model Publication {
  id            Int       @id @default(autoincrement())
  linkUrl       String    @map("link_url")
  publishedAt   DateTime  @default(now()) @map("published_at")
  isActive      Boolean   @default(true) @map("is_active")
  descriptionEn String?
  descriptionTh String?
  titleEn       String
  titleTh       String
  createBy      String    @map("create_by")
  editBy        String?   @map("edit_by")

  @@index([isActive], map: "idx_publication_active")
  @@map("publication")
}
